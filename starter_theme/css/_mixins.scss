// CLEARFIX
// --------------------------------------------------
@mixin clearfix {
  *zoom: 1;
  &:before,
  &:after {
    display: table;
    content: "";
    // Fixes Opera/contenteditable bug:
    // http://nicolasgallagher.com/micro-clearfix-hack/#comment-36952
    line-height: 0;
  }
  &:after {
    clear: both;
  }
}

// GRID
// --------------------------------------------------
@mixin grid-core($gridColumnWidth, $gridGutterWidth) {
  .row {
    margin-left: $gridGutterWidth * -1;
    @include clearfix();
  }

  [class*="span"] {
    float: left;
    min-height: 1px; // prevent collapsing columns
    margin-left: $gridGutterWidth;
  }

  // Set the container width, and override it for fixed navbars in media queries
  .container {
    @include grid-core-span($gridColumns, $gridColumnWidth, $gridGutterWidth);
  }

  // generate .spanX and .offsetX
  @include grid-core-span-x($gridColumns, $gridColumnWidth, $gridGutterWidth);
  @include grid-core-offset-x($gridColumns, $gridColumnWidth, $gridGutterWidth);
}

@mixin grid-core-span-x($gridColumns, $gridColumnWidth, $gridGutterWidth) {
  @for $i from 1 through $gridColumns {
    .span#{$i} { @include grid-core-span($i, $gridColumnWidth, $gridGutterWidth); }
  }
}

@mixin grid-core-offset-x($gridColumns, $gridColumnWidth, $gridGutterWidth) {
  @for $i from 1 through $gridColumns {
    .offset#{$i} { @include grid-core-offset($i, $gridColumnWidth, $gridGutterWidth); }
  }
}

@mixin grid-core-span($columns, $gridColumnWidth, $gridGutterWidth) {
  width: ($gridColumnWidth * $columns) + ($gridGutterWidth * ($columns - 1));
}

@mixin grid-core-offset($columns, $gridColumnWidth, $gridGutterWidth) {
  margin-left: ($gridColumnWidth * $columns) + ($gridGutterWidth * ($columns + 1));
}

// RESPONSIVE BREAKPOINTS
// --------------------------------------------------
@mixin break($media) {
  @if $media == mobile {
    @media (max-width: 767px) { @content; }
  }
  @else if $media == tablet {
    @media (min-width: 768px) and (max-width: 979px) { @content; }
  }
  @else if $media == wide {
    @media only screen and (min-width: 1200px) { @content; }
  }
  @else if $media == hdpi {
    @media only screen and (-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi) { @content; }
  }
}